@model ParvazPardaz.ViewModel.EditAgencySettingViewModel

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Edit", "AgencySetting", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h3>@ParvazPardaz.Resource.Book.Book.ManagementAgencySettings </h3>
        <hr />
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.ImageFileName)
        @Html.HiddenFor(model => model.ImageSize)
        @Html.HiddenFor(model => model.ImageExtension)
        @Html.HiddenFor(model => model.ImageUrl)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title,"", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name,"", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.File, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.FileUploaderFor(model => model.File).Captions(ParvazPardaz.Resource.Tour.Tours.SelectPic).AddMore(false).IsMultiple(false).ItemAppendToEnd(false).RemoveConfirmation(true).ShowThumbs(true).RemoveButtonInEditMode(false).RemoveButton(true).Edit(new List<EditModeFileUpload>() { new EditModeFileUpload() { Name = Model.ImageFileName, Size = Model.ImageSize, Type = Model.ImageExtension, Url = Model.ImageUrl } })
                <div class="alert alert-info">
                    <i class="fa fa-info-circle"></i>
                    @Html.Raw(ParvazPardaz.Resource.Book.Book.PicSize200x200)
                </div>
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrintText, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrintText, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PrintText,"", new { @class = "text-danger" })
            </div>
        </div>

        
        <div class="form-group">
            <div class="col-md-offset-1 col-md-11">
                <input id="BtnSubmit" type="submit" value=@ParvazPardaz.Resource.General.Generals.Edit class="btn btn-custom green" />
                @Html.ActionLink(ParvazPardaz.Resource.General.Generals.Back, "Index", null, new { @class = "btn btn-custom red" })
            </div>
        </div>
    </div>
}

<script>
    $.validator.setDefaults({ ignore: null });

    $('#BtnSubmit').on("click", function () {
        tinymce.triggerSave();
    });
</script>