
@model string

@{
    var values = ViewData.ModelMetadata.AdditionalValues;
}


<div class="form-group">    
    <div class="col-md-10">
        <input type="file" id="upload" accept="image/*" />
    </div>
    <div class="col-md-12">
        <div class="col-md-12 text-center">
            <div id="upload-demo"></div>
            <button type="button" class="upload-result btn btn-danger btn-lg ">@ParvazPardaz.Resource.Title.Titles.Crop</button>
        </div>
        <div class="col-md-12">
            <h3>@ParvazPardaz.Resource.Title.Titles.CropResult<i class="fa fa-arrow-down"></i></h3>
            <img id="show-result" src="" style="display:none" />
            @Html.HiddenFor(model => model, new { @id = "hidden-result" })
        </div>
    </div>
</div>

<script type="text/javascript">  
    $(document).ready(function demoUpload() {
        var $uploadCrop;

        function readFile(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $uploadCrop.croppie('bind', {
                        url: e.target.result,
                    });
                    $('.upload-demo').addClass('ready');
                }

                reader.readAsDataURL(input.files[0]);
            }
            else {
                swal("Sorry - you're browser doesn't support the FileReader API");
            }
        }

        $uploadCrop = $('#upload-demo').croppie({
            viewport: {
                width: parseInt(@values["cropwidth"]),
                height:  parseInt(@values["cropheight"]),

            },
            boundary: {
                width:  parseInt(@values["width"]),
                height:  parseInt(@values["height"])
            },
            exif: true,
            enableOrientation: true,
        });


        $('#upload').on('change', function () { readFile(this); });
        $('.upload-result').on('click', function (ev) {
            $uploadCrop.croppie('result', {
                type: 'canvas',
                size: 'viewport'
            }).then(function (resp) {
                popupResult({
                    src: resp
                });
            });
        });
    }
  );
        function popupResult(result) {
            var html;
            if (result.html) {
                html = result.html;
            }
            if (result.src) {
                html = '<img src="' + result.src + '" />';
            }
            swal({
                title: '',
                html: true,
                text: html,
                showCancelButton: true,
                allowOutsideClick: true,
                confirmButtonText: "قبول",
                cancelButtonText: "بستن",
                closeOnConfirm: true,
                closeOnCancel: true,
            },

            function (isConfirm) {
                if (isConfirm) {
                    $("#show-result").css("display", "block");
                    document.getElementById("show-result").src = result.src;
                    document.getElementById("hidden-result").value = result.src;
                }
            }
            );
        }
</script>
