@model List<AddPassengerViewModel>
@{
    ViewBag.Title = "مسافران";
}
<input type="hidden" id="AdultStartBirthDate" value="@ViewBag.AdultStartBirthDate" />
<input type="hidden" id="AdultEndBirthDate" value="@ViewBag.AdultEndBirthDate" />
<input type="hidden" id="ChildStartBirthDate" value="@ViewBag.ChildStartBirthDate" />
<input type="hidden" id="ChildEndBirthDate" value="@ViewBag.ChildEndBirthDate" />
<input type="hidden" id="InfantStartBirthDate" value="@ViewBag.InfantStartBirthDate" />
<input type="hidden" id="InfantEndBirthDate" value="@ViewBag.InfantEndBirthDate" />
<input type="hidden" id="PassportMinDAteTime" value="@DateTime.Now.AddMonths(6).ToString("yyyy/MM/dd", System.Globalization.CultureInfo.InvariantCulture)" />
<main id="passengers" class="profile">
    @Html.Partial("_PrvCustomerSidebarMenu")
    <section>
        <ul class="sort-bar">
            <li>نام و نام خانوادگی</li>
            <li>شماره ملی</li>
            <li>شماره پاسپورت</li>
            <li>تاریخ تولد</li>
            <li>نوع مسافر</li>
        </ul>
        <dl class="foldingCards" id="passengerList">
            @if (Model != null && Model.Any())
            {
                foreach (var item in Model)
                {
                    @Html.Partial("_PrvEditPassenger", item)
                }
            }
        </dl>
    </section>
</main>
@section scripts{
    <script>
        function PassengerAjaxSuccess(result) {
            toastr.options = { "positionClass": "toast-top-center" }
            toastr.success('اطلاعات مسافر با موفقیت ویرایش گردید', 'ویرایش', { timeOut: 5000 })
            setTimeout(function () {
                location.reload();
            }, 500);
            //$("*").removeData("validator");
            //$("*").removeData("unobtrusiveValidation");
            //$.validator.unobtrusive.parse("*");
        }

        $("input[type=number]").keydown(function (e) {
            
            // مجاز : backspace, delete, tab, escape, enter
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110]) !== -1 ||
                // مجاز: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // مجاز : home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                return;
            }

            var thisValue = $(this).val();
            if (($(this).hasClass("date-day") == true && thisValue.length >= 2)) {
                //روز نباید بیشتر از 2 رقم باشد
                e.preventDefault();
            }
            else if ($(this).hasClass("date-year") == true && thisValue.length >= 4) {
                //سال نباید بیش از 4 رقم باشد
                e.preventDefault();
            }

            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });

        $("input[type=number]").focusout(function (e) {
            if ($(this).hasClass("date-year") == true && $(this).val().length < 4) {
                $(this).val("")
            }

            if ($(this).hasClass("date-day") == true || $(this).hasClass("date-month") == true || $(this).hasClass("date-year") == true) {
                FillHiddenDate(this);
            }
        });

        function FillHiddenDate(thisElement) {
            //بدست آوردن تاریخ تولد انتخاب شده
            var day = $(thisElement).closest("label.label").find(".date-day").val();
            var month = $(thisElement).closest("label.label").find(".date-month").find('option:selected').val();
            var year = $(thisElement).closest("label.label").find(".date-year").val();
            if (day !== "" && month !== "" && year !== "") {
                $(thisElement).closest("label.label").find(".HiddenDate").val(year + "/" + month + "/" + day);
            }
        }

        $(".date-month").on("change", function () {
            FillHiddenDate(this);
        });

        $("input[type=number]").bind('keyup change', function (e) {
            var thisValue = parseInt($(this).val());
            if ($(this).hasClass("date-day") == true && (thisValue > 31 || thisValue < 1)) {
                $(this).val("01");
            }
            else if ($(this).hasClass("date-year") == true && $(this).hasClass("passport") !== true) {
                if (thisValue.toString().length >= 4) {
                    var ageRange = $(this).closest(".passengerItem").find(".AgeRange").val();
                    //بدست آوردن تاریخ تولد انتخاب شده
                    var day = $(this).closest("label.label").find(".date-day").val();
                    if (day == "") {
                        $(this).closest("label.label").find(".date-day").val("01");
                        day = $(this).closest("label.label").find(".date-day").val();
                    }
                    var month = $(this).closest("label.label").find(".date-month").find('option:selected').val();
                    var year = $(this).closest("label.label").find(".date-year").val();
                    var SelectedBirthDate = new Date(year, month, day, 0, 0, 0, 0);
                    var AdultStartBirthDate = new Date($("#AdultStartBirthDate").val());
                    var AdultEndBirthDate = new Date($("#AdultEndBirthDate").val());
                    var ChildStartBirthDate = new Date($("#ChildStartBirthDate").val());
                    var ChildEndBirthDate = new Date($("#ChildEndBirthDate").val());
                    var InfantStartBirthDate = new Date($("#InfantStartBirthDate").val());
                    var InfantEndBirthDate = new Date($("#InfantEndBirthDate").val());
                    switch (ageRange) {
                        case "Adult":
                            if (SelectedBirthDate < AdultStartBirthDate || SelectedBirthDate > AdultEndBirthDate) {
                                $(this).val("");
                                toastr.options = { "positionClass": "toast-top-center" }
                                toastr.error('سن بزرگسال باید بیشتر از 12 سال باشد', 'خطا', { timeOut: 5000 })
                            }
                            break;

                        case "Child":
                            if (SelectedBirthDate < ChildStartBirthDate || SelectedBirthDate > ChildEndBirthDate) {
                                $(this).val("");
                                toastr.options = { "positionClass": "toast-top-center" }
                                toastr.error('سن کودک باید بین 2 تا 12 سال باشد', 'خطا', { timeOut: 5000 })
                            }
                            break;

                        case "Infant":
                            if (SelectedBirthDate < InfantStartBirthDate || SelectedBirthDate > InfantEndBirthDate) {
                                $(this).val("");
                                toastr.options = { "positionClass": "toast-top-center" }
                                toastr.error('سن نوزاد باید بین 10 روز تا 2 سال باشد', 'خطا', { timeOut: 5000 })
                            }
                            break;

                        default:
                            if ($(this).hasClass("date-day") == true || $(this).hasClass("date-month") == true || $(this).hasClass("date-year") == true) {
                                FillHiddenDate(this);
                            }
                            break;
                    }
                }
            }
            else if ($(this).hasClass("passport") == true) {
                if (thisValue.toString().length >= 4) {
                    //بدست آوردن تاریخ انقضای پاسپورت انتخاب شده
                    var day = $(this).closest("label.label").find(".date-day").val();
                    if (day == "") {
                        $(this).closest("label.label").find(".date-day").val("01");
                        day = $(this).closest("label.label").find(".date-day").val();
                    }
                    var month = $(this).closest("label.label").find(".date-month").find('option:selected').val();
                    var year = $(this).closest("label.label").find(".date-year").val();
                    var SelectedPassportDate = new Date(year, month, day, 0, 0, 0, 0);
                    var PassportMinDAteTime = new Date($("#PassportMinDAteTime").val());
                    if (SelectedPassportDate < PassportMinDAteTime) {
                        $(this).val("");
                        $(this).closest("label.label").find(".date-day").val("");
                        toastr.options = { "positionClass": "toast-top-center" }
                        toastr.error('تاریخ انقضای پاسپورت باید حداقل 6 ماه اعتبار داشته باشد', 'خطا', { timeOut: 5000 })
                    }
                }
            }
        });

        //OnlyEnglishChar
        $(".OnlyEnglishChar").on('change keyup keydown', function (e) {
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110]) !== -1 ||
                // مجاز: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                // مجاز : home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                return;
            }

            if (just_english(e.key) === true) {
                return;
            }
            else {
                e.preventDefault();
            }

        });
        function just_english(str) {
            var p = /^[ A-Za-z]*$/;
            if (p.test(str)) {
                return true
            }
            return false;
        }

        //OnlyPersianChar
        $(".OnlyPersianChar").on('change keyup keydown', function (e) {
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110]) !== -1 ||
                // مجاز: Ctrl+A, Command+A
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === false)) ||
                // مجاز : home, end, left, right, down, up
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                return;
            }

            if (just_persian(e.key) === false)
                e.preventDefault();
        });
        function just_persian(str) {
            var p = /^[\u0600-\u06FF\s]+$/;
            if (p.test(str)) {
                return true;
            }
            return false;
        }
    </script>
}