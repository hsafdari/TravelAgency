@model ParvazPardaz.ViewModel.GridPostViewModel


@{
    ViewBag.Title = "Index";

}

@if (ParvazPardaz.Resource.General.Generals.Direction == "RTL")
{
    if (ParvazPardaz.Resource.General.Generals.Regional == "AR")
    {
        @Styles.Render("~/content/kendo/RTL/css");
        @Scripts.Render("~/Scripts/kendo/ar-IQ/js");
    }
    else
    {
        @Styles.Render("~/content/kendo/RTL/css");
        @Scripts.Render("~/Scripts/kendo/fa-IR/js");
    }
}
else
{
    @Styles.Render("~/content/kendo/LTR/css");
    @Scripts.Render("/Scripts/kendo/en-US/js");
}

<h3>@ParvazPardaz.Resource.EShop.EShopResource.PostManagement </h3>

<hr />

<p>
    <a href="@Url.Action("Create")" class="btn btn-green">
        <i class="fa fa-plus"></i>
        @ParvazPardaz.Resource.General.Generals.Create
    </a>
    <a onclick="edit()" class="btn btn-blue">
        <i class="fa fa-edit"></i>
        @ParvazPardaz.Resource.General.Generals.Edit
    </a>
    <a onclick="editImg()" class="btn btn-blue">
        <i class="fa fa-edit"></i>
        ویرایش تصویر
    </a>
    <a onclick="editImgGallery()" class="btn btn-blue">
        <i class="fa fa-edit"></i>
        ویرایش گالری تصاویر
    </a>
    <a onclick="del()" class="btn btn-red">
        <i class="fa fa-trash-o"></i>
        @ParvazPardaz.Resource.General.Generals.Delete
    </a>
</p>

<div class="k-rtl">
    @(Html.Kendo().Grid<ParvazPardaz.ViewModel.GridPostViewModel>()
        .Name("Grid")
        .Columns(columns =>
        {
            //columns.Bound(x => x.Id).ClientTemplate("<a href='\\#' onclick=\"copyToClipboard(#=Id#,'#=Name#')\" class=\"tooltips\" data-original-title=\"" + @ParvazPardaz.Resource.General.Generals.CopyLink + "\"><i class=\"CopyToClipboard fa clip-copy-3 \"></i></a>").Filterable(false).Groupable(false).Sortable(false).Width(80).Title(@ParvazPardaz.Resource.General.Generals.CopyLink).Width(50);
            columns.Bound(x => x.Id).Width(100).Sortable(true).Groupable(false);
            columns.Bound(model => model.Name).Width(150);
            columns.Bound(model => model.IsActive).Width(150);
            columns.Bound(model => model.PostGroups).ClientTemplate("#=DisplayList(PostGroups)#").Filterable(false).Groupable(false).Sortable(false).Width(150);
            columns.Bound(model => model.PostTags).ClientTemplate("#=DisplayList(PostTags)#").Filterable(false).Groupable(false).Sortable(false).Width(150);
            //columns.Bound(model => model.ImageUrl).ClientTemplate("#=GetImgThumb(ImageUrl)#").HtmlAttributes(new { @style = "text-align:center" }).Width(100);
            columns.Bound(model => model.PostSummery).Width(150);
            //columns.Bound(model => model.PostContent).Width(150);
            columns.Bound(model => model.MetaKeywords).Width(150);
            columns.Bound(model => model.MetaDescription).Width(150);
            columns.Bound(model => model.PublishDatetime).ClientTemplate("#=(PublishDatetime != null ? moment(PublishDatetime).format('jYYYY/jMM/jDD HH:mm') : '')#").Width(150);
            columns.Bound(model => model.ExpireDatetime).ClientTemplate("#=(ExpireDatetime != null ? moment(ExpireDatetime).format('jYYYY/jMM/jDD HH:mm') : '')#").Width(150);
            columns.Bound(model => model.PostSort).Width(150);
            columns.Bound(model => model.IsActiveComments).Width(150);
            columns.Bound(model => model.LikeCount).Width(150);
            //columns.Bound(model => model.AccessLevel).Width(150);
            columns.Bound(model => model.PictureCount).Width(150);
            columns.Bound(model => model.CreatorUserName).Width(150);
            columns.Bound(model => model.CreatorDateTime).ClientTemplate("#=(CreatorDateTime != null ? moment(CreatorDateTime).format('jYYYY/jMM/jDD HH:mm') : '')#").Width(150);
            columns.Bound(model => model.LastModifierUserName).Width(150);
            columns.Bound(model => model.LastModifierDate).ClientTemplate("#=(LastModifierDate != null ? moment(LastModifierDate).format('jYYYY/jMM/jDD HH:mm') : '')#").Width(150);

        })
            .Groupable()
            .Pageable()
            .Selectable(selectable => selectable.Mode(GridSelectionMode.Single)
            .Type(GridSelectionType.Row))
            .Navigatable()
            .Sortable()
            .Scrollable(scr => scr.Height(400))
            .Filterable()
            .DataSource(dataSource => dataSource
                .Ajax()
                .Sort(st =>
                        {
                            st.Add(s => s.CreatorDateTime).Descending();
                            st.Add(s => s.Id).Descending();
                        })

                .Model(model => model.Id(item => item.Id))
                .Read(read => read.Action("GetPost", "Post", null)).PageSize(50)
            )
    )
    @Html.Partial("_Toastr")
</div>

@Html.Partial("_ConfirmationMessage")

@section scripts{
<script id="tmpListView" type="text/javascript">
    function DisplayList(datalst) {
        var str = "<ul class='lstingrv'>";
        for (var i = 0; i < datalst.length; i++) {
            str += "<li>" + datalst[i] + "</li>";
        }
        return str;
    }
</script>
    <script>
        var CreateUrl = "@Url.Action("Create", "Post")";
        var EditUrl = "@Url.Action("Edit", "Post")";
        var EditImgUrl = "@Url.Action("Create", "PostImage")";
        var DeleteUrl = "@Url.Action("Delete", "Post")";
        var GalleryEdit = "@Url.Action("CreateGallary","PostImage")";
    </script>

    <script>
        function GetSelectedItemParameters() {

            var gview = $("#Grid").data("kendoGrid");
            var SelectedItem = gview.dataItem(gview.select());
            if (SelectedItem == null) {
                toastr.options = { "positionClass": "toast-top-center" }
                toastr.error('@ParvazPardaz.Resource.General.Generals.SelectedGridRowAlert', '@ParvazPardaz.Resource.General.Generals.SelectedGridRowAlertTitle', { timeOut: 5000 })
                return false;
            }
            else {
                return SelectedItem;
            }
        }

        function CheckSelectedGrid() {
            var gview = $("#Grid").data("kendoGrid");
            var selectedItem = gview.dataItem(gview.select());
            if (selectedItem == null) {
                toastr.options = { "positionClass": "toast-top-center" }
                toastr.error('@ParvazPardaz.Resource.General.Generals.SelectedGridRowAlert', '@ParvazPardaz.Resource.General.Generals.SelectedGridRowAlertTitle', { timeOut: 5000 })
                return false;
            }
            else {
                var selectedId = selectedItem.Id;
                return selectedId;
            }
        }
        var wndRemove = $("#ConfirmationMessage").kendoWindow({
            title: "",
            modal: true,
            visible: false,
            resizable: false,
            width: 400,
        }).data("kendoWindow");

        function create(parameters) {
            window.location.replace(CreateUrl);
        }
        function editImgGallery(parameters) {
            
            var result = CheckSelectedGrid();
            if (result) {
                window.location.replace(GalleryEdit + "?postId=" + result);
            }
        }
        function edit(parameters) {

            var result = CheckSelectedGrid();
            if (result) {
                window.location.replace(EditUrl + "/" + result);
            }
        }
        function editImg(parameters) {

            var result = CheckSelectedGrid();
            if (result) {
                window.location.replace(EditImgUrl + "?postId=" + result);
            }
        }
        function del(parameters) {
            var result = CheckSelectedGrid();
            if (result) {
                wndRemove.center();
                wndRemove.open();
            }
        }
        $("#btnYes").click(function () {
            var gview = $("#Grid").data("kendoGrid");
            var selectedItem = gview.dataItem(gview.select());
            var selectedId = selectedItem.Id;
            $.ajax({
                url: DeleteUrl,
                type: "post",
                dataType: "json",
                cache: false,
                data: { Id: selectedId },
                success: function (result) {
                    var gridm = $("#Grid").data("kendoGrid");
                    if (gridm != undefined && result) {
                        if (gridm.dataSource.transport.cache._store)
                            gridm.dataSource.transport.cache._store = {};
                        gridm.dataSource.fetch();
                        toastr.options = { "positionClass": "toast-top-center" }
                        toastr.error('@ParvazPardaz.Resource.General.Generals.DeleteAlert', '@ParvazPardaz.Resource.General.Generals.DeleteAlertTitle', { timeOut: 5000 })
                    }
                    else {
                        toastr.options = { "positionClass": "toast-top-center" }
                        toastr.error('@ParvazPardaz.Resource.General.Generals.ErrorAlert', '@ParvazPardaz.Resource.General.Generals.ErrorAlertTitle', { timeOut: 5000 })
                    }
                },
                error: function (xhr) {
                    toastr.options = { "positionClass": "toast-top-center" }
                    toastr.error('@ParvazPardaz.Resource.General.Generals.ErrorAlert', '@ParvazPardaz.Resource.General.Generals.ErrorAlertTitle', { timeOut: 5000 })
                }
            });
            wndRemove.close();
        })
        $("#btnNo").click(function () {
            wndRemove.close();
        })
    </script>
    <!-- Get Image URL in thumbnail -->
    <script>
        function GetImgThumb(ImageUrl) {
            if (ImageUrl==null) {
                ImageUrl = "/Images/404/no-image.png";

                return "<img src=\"" + ImageUrl + "\" title='بدون تصویر'/>";
            }
            else
                {
            var splitedUrl = ImageUrl.split('.');
            return "<img src=\"" + splitedUrl[0] + "_Thumb." + splitedUrl[1] + "\" style=\"width:60px; height:60px;\" class=\"img-circle\" />";
            }
        }
    </script>
    <!-- copy link -->
    <script type="text/javascript">
        function copyToClipboard(id, title) {

            var titleP = title.split('+').join('').split('*').join('').split('/').join('').split('\\').join('');
            var _title = titleP.split(' ').join('-');
            var url = "/Post/PostDetail/" + id + "/" + _title;

            window.prompt("Copy to clipboard: Ctrl+C, Enter", url);
        }
    </script>
}


