@model ParvazPardaz.ViewModel.EditTourViewModel
@{
    ViewBag.Title = "ویرایش تور";
}

@*<script src="~/Scripts/nets/jquery-2.0.3.min.js"></script>*@
@*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@

@section css{
    <link href="~/Content/admin/View/Tour.css" rel="stylesheet" />

    <link href="~/Plugins/KendoDateTimePicker/Kendo.default.min.css" rel="stylesheet" />
    <link href="~/Plugins/KendoDateTimePicker/Kendo.common.min.css" rel="stylesheet" />
    <link href="~/Content/kendo/2014.3.1314/kendo.common-material.min.css" rel="stylesheet" />

    <link href="~/Content/kendo/2014.3.1314/kendo.material.min.css" rel="stylesheet" />
    <link href="~/Content/kendo/2014.3.1314/kendo.material.mobile.min.css" rel="stylesheet" />
    <link href="~/Content/kendo/2014.3.1314/kendo.rtl.min.css" rel="stylesheet" />

}

<ul id="progress">
    <li class="active">تور</li>
    <li>
        <a style="cursor:pointer; color:#fff" onclick="jQuery('#BtnNext').click();">گالری تور</a>
    </li>
    <li>
        <a style="color:#fff" href="/Admin/TourProgram/Create?tourId=@Model.Id">برنامه سفر</a>
    </li>
    <li>
        <a style="color:#fff" href="/Admin/TourPackage/Create?tourId=@Model.Id">پکیج تور</a>
    </li>
</ul>
@*<a href="@ViewBag.TourURL" target="_blank" class="btn btn-success" style="display:inline-block; float:left;">مشاهده تور سمت کاربر</a>*@
<br />
<br />

@using (Html.BeginForm(Model.CRUDMode == CRUDMode.Create ? "Create" : "Edit", "Tour"))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)

    <div class="form-horizontal col-md-9">
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.DropDownListFor(d => d.CountryId, Model.CountryDDL, ParvazPardaz.Resource.General.Generals.DDLSelect, new { id = "DDLCountry", @class = "form-control search-select select" }) <!-- , onchange = "FetchState()" -->
                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CityId, new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.DropDownListFor(d => d.CityId, Model.CityDDL, ParvazPardaz.Resource.General.Generals.DDLSelect, new { @class = "form-control search-select select", id = "DDLCity" })
                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.TourLandingPageUrlId, new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.DropDownListFor(d => d.TourLandingPageUrlId, Model.TourLandingPageUrlDDL, ParvazPardaz.Resource.General.Generals.DDLSelect, new { @class = "form-control search-select select", id = "DDLUrl" })
                @Html.ValidationMessageFor(model => model.TourLandingPageUrlId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.LinkTableTitle, new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.LinkTableTitle, new { @class = "form-control", style = "direction:ltr", @readonly="" })
                    <div class="alert alert-info" style="margin-top:10px">
                        <i class="fa fa-info-circle"></i>
                        <strong>توجه!</strong>
                        <p>@ParvazPardaz.Resource.Link.LinkResource.UseThisLinkTableTitlePattern</p>
                        <p style="direction:ltr">@ParvazPardaz.Resource.Link.LinkResource.LinkTableTitlePattern</p>
                    </div>
                    @Html.ValidationMessageFor(model => model.LinkTableTitle, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Recomended, new { @class = "control-label col-md-1" })
            <div class="col-md-3 chkbox">
                @Html.CheckBoxFor(model => model.Recomended, new { @class = "flat-red" })
                @Html.ValidationMessageFor(model => model.Recomended, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.TextBoxFor(model => model.Code, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <div class="editor-label col-md-1">
                        @ParvazPardaz.Resource.Tour.Tours.TourCategory
                    </div>
                    <div class="editor-field col-md-10">
                        @Html.ListBoxFor(model => model._selectedPostGroups, new MultiSelectList(Model._postGroups, "Id", "Name"), new { @class = "form-control search-select select", data_placehoder = "گروه را انتخاب کنید" })
                        @Html.ValidationMessageFor(model => model._selectedPostGroups)
                    </div>
                </div>
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.SelectedTourCategory, new { @class = "control-label col-md-1" })
                <div class="col-md-10">
                    @Html.ListBoxFor(model => model.SelectedTourCategory, ViewBag.TourCategories as IEnumerable<SelectListItem>, new { @class = "form-control search-select select", data_placehoder = @ParvazPardaz.Resource.User.Users.SelectRoles })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedTourLevel, new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedTourLevel, ViewBag.TourLevels as IEnumerable<SelectListItem>, new { @class = "form-control search-select select", data_placehoder = @ParvazPardaz.Resource.User.Users.SelectRoles })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.SelectedTourType, new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedTourType, ViewBag.TourTypes as IEnumerable<SelectListItem>, new { @class = "form-control search-select select", data_placehoder = @ParvazPardaz.Resource.User.Users.SelectRoles })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedAllows, new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedAllows, ViewBag.AllowedBans as IEnumerable<SelectListItem>, new { @class = "form-control search-select select", data_placehoder = @ParvazPardaz.Resource.User.Users.SelectRoles })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.SelectedBans, new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedBans, ViewBag.AllowedBans as IEnumerable<SelectListItem>, new { @class = "form-control search-select select", data_placehoder = @ParvazPardaz.Resource.User.Users.SelectRoles })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequiredDocumentIds, new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @foreach (var item in ViewBag.RequiredDocuments as MultiSelectList)
                {
                <div style="display:inline-block; margin-left:15px;">
                    <input @(item.Selected ? "checked=checked" : "") value="@item.Value" name="RequiredDocumentIds" type="checkbox">
                    @item.Text
                </div>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ShortDescription, new { @class = "form-control", @id = "ShorDescription" })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-1" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-1 col-md-11">
                @Html.ActionLink(ParvazPardaz.Resource.General.Generals.Back, "Index", null, new { @class = "btn btn-custom red", })
                <input id="BtnNext" type="submit" value="@ParvazPardaz.Resource.General.Generals.Next" class="btn btn-custom green" name="command" />
                <input type="submit" value="@ParvazPardaz.Resource.General.Generals.Finish" class="btn btn-custom green" name="command" />
            </div>
        </div>
    </div>

    <div class="col-md-3">
        <div class="form-group">
            <div class="editor-label col-md-22">
                @ParvazPardaz.Resource.Tour.Tours.TourCategory

            </div>
            <div class="editor-field col-md-22">
                <div>
                    @(Html.Kendo()
                .TreeView()
                .DragAndDrop(true)
.Name("treeview")
.Checkboxes(checkboxes => checkboxes
                .Name("checkedFiles")
                .CheckChildren(true)
            )
.Events(events => events
                .Check("onCheck")
            )

                .HtmlAttributes(new { @class = "tree-section" })
                .DataTextField("NodeText")
        .TemplateId("treeview-template")
        //.Events(ev => ev.Select("onSelectedNode"))

                .DataSource(ds =>
                {
                    ds.Read(read => read.Action(actionName: "GetMenuItems", controllerName: "Post").Data("Parameterfn"));
                    ds.Model(model => model
                        .Id("Id")
                        .HasChildren("Haschildren")
                         );
                }))
                    <div id="hidden-rs">

                    </div>
                </div>
            </div>
        </div>
    </div>
}



@section scripts{
    <script src="~/Scripts/kendo.date/JalaliDate.js"></script>
    <script src="~/Scripts/kendo.date/kendo.web.js"></script>
    <script src="~/Scripts/kendo.date/fa-IR.js"></script>

    <script type="text/javascript">
        $('.select').select2({ dir: "RTL" });

    </script>

    <script type="text/javascript">
        //var kd = jQuery.noConflict();
        $(document).ready(function () {

            $('#ShorDescription').jqEasyCounter({
                'maxChars': 242,
                'maxCharsWarning': 200
            });
        });
    </script>

    <script>
        var checked = [];
        var checkedNodes = [];

        // function that gathers IDs of checked nodes
        function checkedNodeIds(nodes, checkedNodes) {
            for (var i = 0; i < nodes.length; i++) {
                if (nodes[i].checked) {
                    if (jQuery.inArray(nodes[i].id, checkedNodes) == -1) {
                        checkedNodes.push(nodes[i].id);
                    }
                }

                if (nodes[i].hasChildren) {
                    checkedNodeIds(nodes[i].children.view(), checkedNodes);
                }
            }
        }

        // show checked node IDs on datasource change
        function onCheck(events) {
            checkedNodes = [];
            //debugger;
            var treeView = $("#treeview").data("kendoTreeView"),
               message;

            //گرفتن شناسه نود انتخاب شده و پدر و اجداد آن
            var treeNodes = $("#treeview").data('kendoTreeView');
            var checkedNode = treeNodes.dataItem(events.node);
            if (checkedNode.checked) {
                //افزودن به آرایه
                checkedNodes.push(checkedNode.Id)
            } else {
                //مقداردهی null در آرایه checkedNodes
                var index = checkedNodes.indexOf(checkedNode.Id);

                if (index !== -1) {
                    checkedNodes[index] = null;
                }
            }

            var currentParent = this.parent(events.node);
            while (currentParent != null) {
                var data = treeNodes.dataItem(currentParent);
                if (data != null) {
                    if (checkedNode.checked) {
                        if (jQuery.inArray(data.Id, checkedNodes) == -1) {
                            //افزودن به آرایه
                            checkedNodes.push(data.Id)
                        }
                    } else {
                        //اگر برادر این ند در لیست checkedNodes
                        //نبود ، آن وقت اجازه حذف اجداد را داشته باشد
                        var children = data.children.view();
                        var isBrotherChecked = false;
                        for (var i = 0; i < children.length; i++) {
                            var isBrotherInList = jQuery.inArray(children[i].Id, checkedNodes);
                            if (children[i].Id != data.Id && isBrotherInList > -1) {
                                isBrotherChecked = true;
                                break;
                            } else {
                                isBrotherChecked = false;
                            }
                        }

                        if (!isBrotherChecked) {
                            //مقداردهی null در آرایه checkedNodes
                            var index = checkedNodes.indexOf(data.Id);

                            if (index !== -1) {
                                checkedNodes[index] = null;
                            }
                        }
                    }

                    var p = this.parent(currentParent);
                    if (p != null) {
                        currentParent = p;
                    } else {
                        currentParent = null;
                    }
                } else {
                    currentParent = null;
                }
            }

            //var checkedNodes = [],
            //    treeView = $("#treeview").data("kendoTreeView"),
            //    message;

            checkedNodeIds(treeView.dataSource.view(), checkedNodes);

            if (checkedNodes.length > 0) {
                message = "IDs of checked nodes: " + checkedNodes.join(",");
            } else {
                message = "No nodes checked.";
            }

            $("#result").html(message);

            //for (var i = 0; i < checkedNodes.length; i++) { checked[i] = parseInt(checkedNodes[i], 10); }
            //$('.selectedPostGroup').val('sss');

            //remove hidden node
            var myNode = document.getElementById("hidden-rs");
            while (myNode.firstChild) {
                myNode.removeChild(myNode.firstChild);
            }

            //add hidden node
            for (var i = 0; i < checkedNodes.length; i++) {
                if (checkedNodes[i] != null) {
                    var input = document.createElement("input");
                    input.setAttribute("type", "hidden");
                    input.setAttribute("name", "_selectedPostGroups[" + i + "]");
                    input.setAttribute("value", parseInt(checkedNodes[i], 10));
                    //append to form element that you want .
                    document.getElementById("hidden-rs").appendChild(input);
                }
            }


        }
    </script>

    <script>
        function Parameterfn(e) {
            return {
                Id: e.Id,
                //MenugroupId:@(ViewBag.GroupId)
            };
        }
    </script>

    <script type="text/javascript">
        var treeview;
        //var $ = jQuery.noConflict();
        function onSelectedNode(e) {
            $("#chkroot").prop("checked", false);
            var nodeId = treeview.dataItem(e.node).Id;
            $("#hdnGroupId").val(nodeId);
            //Hiding menu type element
            document.getElementById('MenuTypeDiv').style.display = 'none';
            var a = document.getElementById("MenuType");
            a.value = "Type_0";
        }
        $(document).ready(function () {
            treeview = $("#tree").data("kendoTreeView");
            $("#chkroot").change(function () {
                if ($(this).prop('checked') == true) {
                    $("#hdnGroupId").val(null);
                    //display menu type element
                    document.getElementById('MenuTypeDiv').style.display = 'block';
                }
            });
        });
        //function IsRootCheck() {
        //    if (document.getElementById('MenuType').checked) {
        //        //display menu type element
        //        document.getElementById('MenuTypeDiv').style.display = 'block';
        //    }
        //    else{
        //        //hiding menu type element
        //        document.getElementById('MenuTypeDiv').style.display = 'none';
        //        var a = document.getElementById("MenuType");
        //        a.value = "Type_0";
        //    }
        //}
    </script>

    <script src="~/Plugins/tinymce/tinymce.min.js" type="text/javascript"></script>
    <script src="~/Plugins/tinymce/langs/fa.js"></script>

    <script type="text/javascript">

        tinymce.init({
            selector: "#Description",
            valid_elements: "*[*]",
            menubar: false,
            convert_urls: false,
            valid_children: "+body[i],+body[section],+div[i]",
            theme: "modern",
            height: 400,
            plugins: [
                "autolink link"
            ],
            content_css: "/Plugins/tinymce/content.css",
            toolbar: "undo redo | bullist numlist | link",
            file_browser_callback: RoxyFileBrowser,
            style_formats: [
        { title: 'Bold text', inline: 'b' },
        { title: 'Red text', inline: 'span', styles: { color: '#ff0000' } },
        { title: 'Red header', block: 'h1', styles: { color: '#ff0000' } },
        { title: 'Example 1', inline: 'span', classes: 'example1' },
        { title: 'Example 2', inline: 'span', classes: 'example2' },
        { title: 'Table styles' },
        { title: 'Table row 1', selector: 'tr', classes: 'tablerow1' }
            ]
        });
        var roxyFileman = '/Areas/Admin/scripts/RoxyFileManager/index.html?integration=tinymce4';
        function RoxyFileBrowser(field_name, url, type, win) {
            var cmsURL = roxyFileman;  // script URL - use an absolute path!
            if (cmsURL.indexOf("?") < 0) {
                cmsURL = cmsURL + "?type=" + type;
            }
            else {
                cmsURL = cmsURL + "&type=" + type;
            }
            cmsURL += '&input=' + field_name + '&value=' + win.document.getElementById(field_name).value;
            tinyMCE.activeEditor.windowManager.open({
                file: cmsURL,
                title: 'ParvazPardaz File Manager',
                width: 850, // Your dimensions may differ - toy around with them!
                height: 650,
                resizable: "yes",
                plugins: "media",
                inline: "yes", // This parameter only has an effect if you use the inlinepopups plugin!
                close_previous: "no"
            }, {
                window: win,
                input: field_name
            });
            return false;
        }
    </script>
    <script>
        $("#DDLCountry").change(function FetchCity() {
            //debugger;
            var items = "";
            var countryId = $("#DDLCountry").val();
            if (countryId == "") {
                items = "<option value=\"" + 0 + "\">" + '@ParvazPardaz.Resource.General.Generals.DDLSelect' + "</option>";
                $("#DDLCity").html(items);
            }
            else {
                items = "<option value=\"" + 0 + "\">" + '@ParvazPardaz.Resource.General.Generals.DDLSelect' + "</option>";
                var x = $.getJSON("/Admin/City/FindCitiesByCountryId/" + countryId, function (data) {
                    $.each(data, function (i, item) {
                        items += "<option value=\"" + item.Value + "\" " + ((item.Selected == true) ? "Selected" : "") + " >" + item.Text + "</option>";
                    });
                    $("#DDLCity").html(items);
                });
            }
        });

        @*$("#DDLCity").change(function FetchUrl() {
            //debugger;
            var items = "";
            var cityId = $("#DDLCity").val();
            if (cityId == "") {
                items = "<option value=\"" + 0 + "\">" + '@ParvazPardaz.Resource.General.Generals.DDLSelect' + "</option>";
                $("#DDLUrl").html(items);
            }
            else {
                items = "<option value=\"" + 0 + "\">" + '@ParvazPardaz.Resource.General.Generals.DDLSelect' + "</option>";
                $.ajax({
                    type: "POST",
                    url: "/Admin/TourLandingPageUrl/FindUrlsByCityIdEditMode/",
                    data: {
                        id: cityId,
                        previousUrlId:@(Model.TourLandingPageUrlId ?? 0),
                        landingPageUrlType: '@(ParvazPardaz.Model.Enum.EnumLandingPageUrlType.GeneralTour)'
                        }
                }).done(function(data) {
                    //debugger;
                    $.each(data, function (i, item) {
                        items += "<option value=\"" + item.Value + "\" " + ((item.Selected == true) ? "Selected" : "") + " >" + item.Text + "</option>";
                    });
                    $("#DDLUrl").html(items);
                });
                //var x = $.getJSON("/Admin/TourLandingPageUrl/FindUrlsByCityId/" + cityId, function (data) {
                //    $.each(data, function (i, item) {
                //        items += "<option value=\"" + item.Value + "\" " + ((item.Selected == true) ? "Selected" : "") + " >" + item.Text + "</option>";
                //    });
                //    $("#DDLUrl").html(items);
                //});
            }
        });*@

        //$("#DDLUrl").change(function SetIsActive() {
        //    //debugger;
        //    var urlId = $("#DDLUrl").val();
        //    var hasChecked = $(".icheckbox_flat-red").hasClass("checked");
        //    if (urlId > 0 && hasChecked == false) {
        //        $(".iCheck-helper").trigger("click");
        //    }
        //});

        $("form").submit(function () {
            var hasChecked = $(".icheckbox_flat-red").hasClass("checked");
            //اگه تور فعال نباشه ، دراپ-داون آدرس رو به حالت انتخاب نشده تغییر میده
            //و در نتیجه در فیلد تور.لندینگ.پیج.یو.آر.ال.آیدی مقدار صفر قرار می گیره
            if (hasChecked == false) {
                $("#DDLUrl").val("0");
                $("#DDLUrl").trigger('change');
            }
        });
    </script>
}



